// Generated by https://quicktype.io

import type {
  BlockObjectResponse,
  Heading1BlockObjectResponse,
  Heading2BlockObjectResponse,
  Heading3BlockObjectResponse,
  PartialBlockObjectResponse,
} from "@notionhq/client";

export interface NotionDatabase {
  object: string;
  id: string;
  title: Title[];
  description: any[];
  parent: Parent;
  is_inline: boolean;
  in_trash: boolean;
  is_locked: boolean;
  created_time: Date;
  last_edited_time: Date;
  data_sources: DataSource[];
  icon: null;
  cover: null;
  url: string;
  public_url: null;
  request_id: string;
}

export interface DataSource {
  id: string;
  name: string;
}

export interface Parent {
  type: string;
  page_id: string;
}

export interface Title {
  type: string;
  text: Annotations;
  annotations: Annotations;
  plain_text: string;
  href: null;
}

export interface Annotations {}

// Generated by https://quicktype.io

export interface NotionDatasource {
  object: string;
  results: Result[];
  next_cursor: string;
  has_more: boolean;
  type: string;
  page_or_data_source: PageOrDataSource;
  request_id: string;
}

export interface PageOrDataSource {}

export interface Result {
  object: string;
  id: string;
  created_time: Date;
  last_edited_time: Date;
  created_by: PageOrDataSource;
  last_edited_by: PageOrDataSource;
  cover: null;
  icon: PageOrDataSource;
  parent: PageOrDataSource;
  archived: boolean;
  in_trash: boolean;
  is_locked: boolean;
  properties: PageOrDataSource;
  url: string;
  public_url: null;
}

export type Block = BlockObjectResponse | PartialBlockObjectResponse;

export type HeadingBlock =
  | (
      | Heading1BlockObjectResponse
      | Heading2BlockObjectResponse
      | Heading3BlockObjectResponse
    ) & {
      type: "heading_1" | "heading_2" | "heading_3";
      [key: string]: any;
    };

export type TodoAndChildren = {
  todos: Block;
  children: Block[];
};
